// lib/main.dart

import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:provider/provider.dart';
// Import your AuthProvider
import 'src/auth/auth_provider.dart'; // Adjust path as needed
import 'src/navigation/app_router.dart';
import 'src/services/chat_service.dart'; // Import ChatService
import 'src/chat/chat_provider.dart'; // Import ChatProvider
// Import your RootNavigator or initial app widget
// import 'package:orion_app/src/navigation/root_navigator.dart'; // Example

// Import Firebase options (generated by FlutterFire CLI)
import 'firebase_options.dart'; // Ensure this file exists and is configured

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const OrionApp());
}

class OrionApp extends StatefulWidget {
  const OrionApp({super.key});

  @override
  State<OrionApp> createState() => _OrionAppState();
}

class _OrionAppState extends State<OrionApp> {
  late final AuthProvider _authProvider;
  late final AppRouter _appRouter;
  late final ChatService _chatService;

  @override
  void initState() {
    super.initState();
    _authProvider = AuthProvider();
    _appRouter = AppRouter(authProvider: _authProvider);
    _chatService = ChatService();
  }

  @override
  void dispose() {
    _authProvider.dispose(); // Dispose the AuthProvider
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return MultiProvider( // Use MultiProvider for multiple providers
      providers: [
        ChangeNotifierProvider<AuthProvider>.value(value: _authProvider),
        ChangeNotifierProvider<ChatProvider>(
          create: (_) => ChatProvider(chatService: _chatService /*, authProvider: _authProvider (if needed)*/),
        ),

      ],
      child: Builder(
          builder: (context) {
            final router = _appRouter.router;
            return MaterialApp.router(
              title: 'Orion Calendar Assistant',
              theme: ThemeData(
                primarySwatch: Colors.indigo,
                visualDensity: VisualDensity.adaptivePlatformDensity,
                useMaterial3: false,
              ),
              routerConfig: router,
              debugShowCheckedModeBanner: false,
            );
          }
      ),
    );
  }
}
